# -*- coding: utf-8 -*-
"""
@author: MANASVI
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler
from sklearn.compose import ColumnTransformer
from sklearn.linear_model import LinearRegression
import statsmodels.api as sm 
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

#reading the data
data = pd.read_csv("50_Startups.csv")

#checking for na values
data.isna().sum()     

#dealing with categorical data
encoder = LabelEncoder()
data['State'] = encoder.fit_transform(data["State"])
ct = ColumnTransformer([('one_hot_encoder', OneHotEncoder(), [3])], remainder = 'passthrough')
data1 = ct.fit_transform(data)

#Handling the Dummy variable trap
data1 = np.delete(data1, 2, axis =1)    

#normalizing the data
scaler = StandardScaler()
data1 = scaler.fit_transform(data1)

#extracting label column
Y = data1[:, -1]

#using Backward Elimination
data1 =  np.insert(data1, 0,1, axis = 1)
X_opt = data1[:, [3,5]]
regressor_OLS = sm.OLS(endog =Y , exog=X_opt).fit()
#print(regressor_OLS.summary())

#splitting the data into training and testing section
X_train, X_test, Y_train, Y_test = train_test_split(X_opt, Y, test_size = 0.1)

#Now we fit the model
lr = LinearRegression()
lr.fit(X_train, Y_train)

#predicting the result
Y_pred = lr.predict(X_test)

print("Accuracy of the model: ", lr.score(X_test, Y_test))      #Accuracy of the model:  0.9735245532121819
print("Root Mean Squared Error: ", mean_squared_error(Y_test, Y_pred))      #Root Mean Squared Error:  0.03213788646303707









